buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'

mainClassName = 'org.flamierawieo.anirandom.Anirandom'

jar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '4.1.0.RELEASE'
    compile group: 'com.mitchellbosecke', name: 'pebble', version: '2.2.1'
    compile 'com.googlecode.json-simple:json-simple:1.1'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.mongodb:mongo-java-driver:3.2.2'
    compile 'org.mongodb.morphia:morphia:1.1.0'
    compile 'org.springframework.boot:spring-boot-devtools'
    testCompile("junit:junit")
}

task staticResources(type: Copy) {
    from 'node_modules/baconjs/dist/Bacon.min.js'
    from 'node_modules/jquery/dist/jquery.min.js'
    from 'node_modules/sweetalert/dist/sweetalert.min.js'
    from 'node_modules/sweetalert/dist/sweetalert.css'
    into 'build/resources/main/static/'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

run {
    jvmArgs = ['-Dspring.config.name=application.properties']
}

bootRun {
    jvmArgs = ['-Dspring.config.name=application.properties']
    addResources = true
}
